version: '3.8'

services:
  # PostgreSQL Database (Main Data Storage)
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-fpl_data}
      POSTGRES_USER: ${DB_USER:-fpl_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fpl_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./storage/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fpl_user} -d ${DB_NAME:-fpl_data}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache (Performance Optimization)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FPL Prediction Engine API
  fpl-api:
    build: .
    ports:
      - "8001:8000"
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Data Collection Service (Phase 1)
  data-collector:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: python -m scripts.run_scrapers
    restart: unless-stopped

  # Scheduler Service (Phase 1)
  scheduler:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: python -m orchestration.scheduler
    restart: unless-stopped

  # Test runner service
  test-runner:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=DEBUG
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: python scripts/test_prediction_engine.py

volumes:
  postgres_data:
  redis_data: 