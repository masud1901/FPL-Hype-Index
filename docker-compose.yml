version: '3.8'

services:
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-fpl_data}
      POSTGRES_USER: ${DB_USER:-fpl_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fpl_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./storage/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fpl_user} -d ${DB_NAME:-fpl_data}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  data_collector:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./logs:/app/logs
      - .:/app
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    command: ["python", "-m", "scripts.run_scrapers"]

  scheduler:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./logs:/app/logs
      - .:/app
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    command: ["python", "-m", "orchestration.scheduler"]

  test:
    build: .
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-fpl_data}
      - DB_USER=${DB_USER:-fpl_user}
      - DB_PASSWORD=${DB_PASSWORD:-fpl_password}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./logs:/app/logs
      - .:/app
    depends_on:
      database:
        condition: service_healthy
    command: ["python", "scripts/test_phase4_docker.py"]
    profiles:
      - test

volumes:
  postgres_data: 